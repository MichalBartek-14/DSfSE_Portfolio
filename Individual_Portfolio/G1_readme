# Data Science for Smart Environments

## README Goal 1: Learning and Applying Python Libraries for Machine Learning

### Objective
Learn how to work with new Python libraries for machine learning, such as **scikit-learn**. Improve and automate skills using **pandas** and **geopandas**.

## Background
For this course, **Data Science for Smart Environments - Programming in Python**, my primary goal was to improve my Python skills, particularly for real-world datasets. While I had prior experience with Python for scripting, I had never worked on a complex project involving machine learning and geospatial data. 

Since the workshops were designed to enhance scripting abilities, I dedicated significant effort to improving my proficiency with machine learning and automation libraries.

## Process
### Learning Approach
To enhance my coding skills throughout the course, I used resources such as:
- **Datacamp**
- **Jupyter notebooks**
- **External sources** (GitHub, Stack Overflow, AI tools)

### Data Acquisition and Formatting
- Implemented API requests to gather data from the **WIN50** dataset.
- Used **xarray** to read `.nc` files downloaded via API.
- Processed and formatted data using **geopandas**.
- Matched multiple datasets spatially and contextually using **GIS software**.
- Created preliminary **visualizations** with **matplotlib** and **geopandas**.

### Object-Oriented Programming (OOP)
- Inspired by Jascha Gr√ºbel's **Week 2 lecture**, I attempted **OOP** for automation.
- Developed scripts using **OOP principles** to streamline processes.
- Implemented OOP in **b04_HarmonieAnalysisOOP** (available on GitHub).

### Machine Learning Exploration
- Experimented with **scikit-learn** during **Week 2 tutorials** and project trials.
- Designed an ML architecture but ultimately did not implement a predictive model due to accuracy limitations.

## Results
- Produced **multiple visualizations** and **core datasets** used by the team.
- Responsible for:
  - **Data acquisition**
  - **Formatting the HARMONIE model**
  - **Merging and joining datasets**
- Created **several visuals** that were incorporated into the final product.
- Sample outputs include (included in the visualisation folder):
  - **Comparison of two datasets** using **pandas, numpy, and matplotlib**.
  - **Visualization using Object-Oriented Programming (OOP)**.
  - **Example script utilizing OOP** ([`b04_HarmonieAnalysisOOP`]).

## Reflection
| **Skill** | **Proficiency** |
|-----------|----------------|
| Traditional Data Science Libraries (pandas, numpy, matplotlib) | **100%** |
| Object-Oriented Programming (Automation & Clarity) | **80%** |
| Machine Learning Libraries (scikit-learn) | **50%** |

- Successfully improved scripting skills and mastered fundamental Python libraries.
- Successfully implemented **OOP** for automation.
- Did not fully integrate machine learning into the project, which remains an area for improvement.

## Sources
- [WIN50 Website](https://dataplatform.knmi.nl/dataset/wins50-wfp-nl-ts-singlepoint-3)
- [Learn Data Structures and Algorithms - YouTube Video](https://www.youtube.com/watch?v=CBYHwZcbD-s&list=PLP1dGtcJJInWLPAl_F553xeCiwlFnLC0x&index=9&ab_channel=BroCode)

---

### Notes:
- Full scripts are available on my **GitHub repository**.
- For a deeper dive into my implementation of **Object-Oriented Programming**, check out [`b04_HarmonieAnalysisOOP`].

---
**Author:** Michal Bartek  
**Date:** January 2025

